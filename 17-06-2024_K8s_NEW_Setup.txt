    sudo su -
    sudo swapoff -a
    sudo sed -i '/ swap / s/^/#/' /etc/fstab
    
   

    cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF
    
    sudo modprobe overlay
    sudo modprobe br_netfilter
     
     cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
     net.bridge.bridge-nf-call-iptables = 1
     net.bridge.bridge-nf-call-ip6tables = 1
     net.ipv4.ip_forward = 1
     EOF
   
   
   sudo vi /etc/sysctl.d/k8s.conf
   sudo vi /etc/modules-load.d/k8s.conf
   sudo sysctl --system
   
   sudo apt-get update
   sudo apt-get install -y apt-transport-https ca-certificates curl
   
   curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.26/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.26/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
   
    sudo apt-get update
    sudo apt-get install -y kubelet kubeadm kubectl
     sudo apt-mark hold kubelet kubeadm kubectl
     sudo apt install docker.io
   
    sudo mkdir -p /etc/containerd
   
    sudo sh -c "containerd config default> /etc/containerd/config.toml"
  
    sudo sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml
    sudo systemctl restart containerd.service && sudo systemctl restart kubelet.service
    sudo systemctl enable kubelet.service
    sudo systemctl restart containerd
    kubeadm init
    exit


========================================================================
Execute the below commands in the "master/control plane" only as a "normal user"
===================================================================
        mkdir -p $HOME/.kube
       sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
       sudo chown $(id -u):$(id -g) $HOME/.kube/config
       kubectl get pods -o wide --all-namespaces
       
kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
    
   kubectl get pods -o wide --all-namespaces
   kubectl get nodes
   kubeadm token create --print-join-command
   kubectl get nodes
   kubectl get pods -o wide --all-namespaces
   kubectl get services
   kubectl get services -A









 sudo ls /etc/kubernetes/manifests/staticpod




replication controller

apiVersion: v1
kind: ReplicationController
metadata:
     name: javarc
     namespace: test-ns
spec:
      replicas: 2
      template:
            metadata:
                  name: javapod
                  namespace: test-ns
		  labels:
			app: javaapp
	    spec:
		containers:
   			- name: javacontainer
			  image: ankush3891/javaweapp
			  ports:
			    - containerPort: 8080

